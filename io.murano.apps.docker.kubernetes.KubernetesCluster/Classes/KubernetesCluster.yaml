Namespaces:
  =: io.murano.apps.docker.kubernetes
  std: io.murano
  res: io.murano.resources
  sys: io.murano.system

Name: KubernetesCluster

Extends: std:Application

Properties:
  name:
    Contract: $.string().notNull()

  masterNode:
    Contract: $.class(KubernetesMasterNode).notNull()

  minionNodes:
    Contract:
      - $.class(KubernetesMinionNode).notNull()
      - 1

  nodeCount:
    Contract: $.int().notNull().check($ > 0)
    Usage: InOut

Methods:
  initialize:
    Body:
      - $._environment: $.find(std:Environment).require()

  deploy:
    Body:
      - If: not $.getAttr(deployed, false)
        Then:
          - $._environment.reporter.report($this, 'Creating VMs for Kubernetes cluster')
          - $securityGroupIngress:
              - ToPort: 4001
                FromPort: 4001
                IpProtocol: tcp
                External: false
              - ToPort: 7001
                FromPort: 7001
                IpProtocol: tcp
                External: false
              - ToPort: 10250
                FromPort: 10250
                IpProtocol: tcp
                External: false
              - ToPort: 8080
                FromPort: 8080
                IpProtocol: tcp
                External: false
          - $._environment.securityGroupManager.addGroupIngress($securityGroupIngress)
          - $._environment.reporter.report($this, 'Setting up Kubernetes cluster')
          - $.masterNode.deploy()
          - $.setAttr(deployed, true)

          - Parallel:
              - Do:
                - $.minionNodes.take($.nodeCount).pselect($.deploy())
              - Do:
                - $.minionNodes.skip($.nodeCount).pselect($.removeFromCluster())

  scaleUP:
    Usage: Action
    Body:
      - $._environment.reporter.report($this, 'Scaling up Kubernetes containers cluster up')

      - If: $.nodeCount < len($.minionNodes):
        Then:
          - $minion: $.minionNodes[$.nodeCount]
          - $._environment.reporter.report($this, 'Creating a new VM')
          - $minion.deploy()
          - $.nodeCount: $.nodeCount + 1
          - $._environment.reporter.report($this, 'Scaling Kubernetes containers cluster complete')


  exportConfig:
    Usage: Action
    Body:
      - $._environment.reporter.report($this, 'Action exportConfig is called')
      - $resources: new(sys:Resources)
      - $template: $resources.yaml('ExportConfig.template')
      - $result: $.masterNode.instance.agent.call($template, $resources)
      - $._environment.reporter.report($this, 'Got archive from Kubernetes')
      - Return: new(std:File, base64Content=>$result.content,
                    filename => 'application.tar.gz')

  getIp:
    Body:
      Return: $.masterNode.getIp()
